#!/usr/bin/env python

import sys
import webvtt
import pandas as pd
import argparse
from pathlib import Path

parser = argparse.ArgumentParser()

parser.add_argument(
    "input_vtt_file", help="Input Zoom transcript in vtt format"
)

parser.add_argument("output_tsv_file", help="Output TSV format")
args = parser.parse_args()

records = []

for caption in webvtt.read(args.input_vtt_file):
    # If a speaker is identified, extract the speaker.

    text_components = caption.text.rsplit(": ", 1)
    speaker = text_components[0] if len(text_components) > 1 else None

    # Extract the text
    text = (
        text_components[1] if len(text_components) > 1 else text_components[0]
    )

    records.append(
        {
            "filename": Path(args.input_vtt_file).stem,
            "start_timestamp": caption.start,
            "end_timestamp": caption.end,
            "speaker": speaker,
            "text": text,
        }
    )

# Create the dataframe
df = pd.DataFrame(records)

# Output the dataframe to TSV
df.to_csv(args.output_tsv_file)
