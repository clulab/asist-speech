theme(plot.title=element_text(size=28),  # caption
axis.title.x=element_text(size=25,face= "bold"),  # X axis title #vjust=10,
axis.title.y=element_text(size=25,face= "bold"),  # Y axis title
axis.text.x=element_text(size=15,face= "bold"),    # vjust=.4) angle = 30),  # X axis text
axis.text.y=element_text(size=15,face= "bold")
) +
scale_y_continuous(breaks=seq(0, 400, 50))
ggplot(data = top8, mapping = aes(x = months, y = ls)) +
geom_col(aes(fill = months)) +
scale_fill_manual(values = pride_palette("philly_poc_pride")) +
labs(title = "Average air passengers 1949-1960", x = "Months", y = "Passengers") +
theme(plot.title=element_text(size=28, align = "center"),  # title
axis.title.x=element_text(size=25,face= "bold"),  # X axis title #vjust=10,
axis.title.y=element_text(size=25,face= "bold"),  # Y axis title
axis.text.x=element_text(size=15,face= "bold"),    # vjust=.4) angle = 30),  # X axis text
axis.text.y=element_text(size=15,face= "bold")
) +
scale_y_continuous(breaks=seq(0, 400, 50))
ggplot(data = top8, mapping = aes(x = months, y = ls)) +
geom_col(aes(fill = months)) +
scale_fill_manual(values = pride_palette("philly_poc_pride")) +
labs(title = "Average air passengers 1949-1960", x = "Months", y = "Passengers") +
theme(plot.title=element_text(size=28, hjust = 0.5),  # title
axis.title.x=element_text(size=25,face= "bold"),  # X axis title #vjust=10,
axis.title.y=element_text(size=25,face= "bold"),  # Y axis title
axis.text.x=element_text(size=15,face= "bold"),    # vjust=.4) angle = 30),  # X axis text
axis.text.y=element_text(size=15,face= "bold")
) +
scale_y_continuous(breaks=seq(0, 400, 50))
ggplot(data = top8, mapping = aes(x = months, y = ls)) +
geom_col(aes(fill = months)) +
scale_fill_manual(values = pride_palette("philly_poc_pride")) +
labs(title = "Average air passengers 1949-1960", x = "Months", y = "Passengers") +
theme(plot.title=element_text(size=28, hjust = 0.5),  # title
axis.title.x=element_text(size=24,face= "bold"),  # X axis title #vjust=10,
axis.title.y=element_text(size=24,face= "bold"),  # Y axis title
axis.text.x=element_text(size=15,face= "bold"),    # vjust=.4) angle = 30),  # X axis text
axis.text.y=element_text(size=15,face= "bold")
) +
scale_y_continuous(breaks=seq(0, 400, 50))
ggplot2(data = top8, mapping = aes(x = months, y = ls)) +
geom_col(aes(fill = months)) +
scale_fill_manual(values = pride_palette("philly_poc_pride")) +
labs(title = "Average air passengers 1949-1960", x = "Months", y = "Passengers") +
theme(plot.title=element_text(size=28, hjust = 0.5),  # title
axis.title.x=element_text(size=24,face= "bold"),  # X axis title #vjust=10,
axis.title.y=element_text(size=24,face= "bold"),  # Y axis title
axis.text.x=element_text(size=15,face= "bold"),    # vjust=.4) angle = 30),  # X axis text
axis.text.y=element_text(size=15,face= "bold")
) +
scale_y_continuous(breaks=seq(0, 400, 50))
ggplot(data = top8, mapping = aes(x = months, y = ls)) +
geom_col(aes(fill = months)) +
scale_fill_manual(values = pride_palette("philly_poc_pride")) +
labs(title = "Average air passengers 1949-1960", x = "Months", y = "Passengers") +
theme(plot.title=element_text(size=28, hjust = 0.5),  # title
axis.title.x=element_text(size=24,face= "bold"),  # X axis title #vjust=10,
axis.title.y=element_text(size=24,face= "bold"),  # Y axis title
axis.text.x=element_text(size=15,face= "bold"),    # vjust=.4) angle = 30),  # X axis text
axis.text.y=element_text(size=15,face= "bold")
) +
scale_y_continuous(breaks=seq(0, 400, 50))
ggplot(data = top8, mapping = aes(x = months, y = ls)) +
geom_col(aes(fill = months)) +
scale_fill_manual(values = pride_palette("philly_poc_pride")) +
labs(title = "Average air passengers 1949-1960", x = "Month", y = "Passengers") +
theme(plot.title=element_text(size=28, hjust = 0.5),  # title
axis.title.x=element_text(size=24,face= "bold"),  # X axis title #vjust=10,
axis.title.y=element_text(size=24,face= "bold"),  # Y axis title
axis.text.x=element_text(size=15,face= "bold"),    # vjust=.4) angle = 30),  # X axis text
axis.text.y=element_text(size=15,face= "bold")
) +
scale_y_continuous(breaks=seq(0, 400, 50))
library(PridePalettes)
library(ggplot2)
data1 <- AirPassengers
data <- data.frame(matrix(AirPassengers, ncol = 12, byrow =TRUE,  dimnames = list( as.character(1949:1960),month.abb)))
ls1 <- colMeans(data[sapply(data, is.numeric)])
months <- month.abb
avg <- data.frame(ls1, months)
top8 <- avg[order(avg$ls1, decreasing= TRUE)[1:8],]
ggplot(data = top8, mapping = aes(x = months, y = ls)) +
geom_col(aes(fill = months)) +
scale_fill_manual(values = pride_palette("philly_poc_pride")) +
labs(title = "Average air passengers 1949-1960", x = "Month", y = "Passengers") +
theme(plot.title=element_text(size=28, hjust = 0.5),  # title
axis.title.x=element_text(size=24,face= "bold"),  # X axis title #vjust=10,
axis.title.y=element_text(size=24,face= "bold"),  # Y axis title
axis.text.x=element_text(size=15,face= "bold"),    # vjust=.4) angle = 30),  # X axis text
axis.text.y=element_text(size=15,face= "bold")
) +
scale_y_continuous(breaks=seq(0, 400, 50))
install.packages("rmarkdown")
---
title: "L1 Japanese/L2 English Flap Analysis"
output:
html_notebook
---
require("lattice")
require("ggplot2")
require("lme4")
require("lsmeans")
require("car")
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
View(summarySE)
View(summarySE)
setwd("~/Downloads/natasha_nsf")
data = read.delim("phonVarProduction20161107.txt")
data = data[which(data$Group == "arizona" | data$Group == "japanese"),]
data$Subgroup[data$Group == "arizona" & data$Language == "english"] = "AZ-English"
data$Subgroup[data$Group == "japanese" & data$Language == "english"] = "JPN-English"
data$Subgroup[data$Group == "japanese" & data$Language == "japanese"] = "JPN-Japanese"
data$Subgroup = as.factor(data$Subgroup)
# GET SUBSET OF WITHIN WORD & FLAP
notWB.Flap = data[which(data$AtWordBoundary == "n" & (data$Consonant == "d" | data$Consonant == "t")),]
# summary(notWB.Flap)
md.lm.flap = lmer(IntensityDifference ~ Consonant * Style * Subgroup + (1|Speaker) + (1|Word), data = notWB.Flap, REML=F)
Anova(md.lm.flap, Type = "II",  test.statistic = "Chisq")
notWB.Flap.plt = summarySE(notWB.Flap, measurevar="IntensityDifference", groupvars=c("Consonant", "Style", "Subgroup"))
# BAR
ggplot(notWB.Flap.plt, aes(x = Consonant, y = IntensityDifference, fill = Style)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(aes(ymin = IntensityDifference - se, ymax = IntensityDifference + se),
position = position_dodge(.9), width = .5) +
facet_grid( ~ Subgroup) +
xlab("Consonant") + ylab("Intensity Difference") + labs(fill = "Style") +
ggtitle("Intensity Difference - JPN.Flap") +
theme(text = element_text(face="bold"))
# VIOLIN
ggplot(notWB.Flap, aes(x = Consonant, y = IntensityDifference, fill = Style)) +
geom_violin() +
facet_grid( ~ Subgroup) +
xlab("Consonant") + ylab("Intensity Difference") + labs(fill = "Style") +
ggtitle("Intensity Difference - JPN.Flap") +
theme(text = element_text(face="bold"))
md.lm.flap.1 = lmer(IntensityDifference ~ Consonant * Style * Subgroup + (1|Speaker) + (1|Word), data = notWB.Flap, REML=F)
md.lm.flap.2 = lmer(IntensityDifference ~ Consonant + Style * Subgroup + (1|Speaker) + (1|Word), data = notWB.Flap, REML=F)
md.lm.flap.3 = lmer(IntensityDifference ~ Consonant * Style + Subgroup + (1|Speaker) + (1|Word), data = notWB.Flap, REML=F)
md.lm.flap.4 = lmer(IntensityDifference ~ Consonant + Style + Subgroup + (1|Speaker) + (1|Word), data = notWB.Flap, REML=F)
anova(md.lm.flap.1,md.lm.flap.2)
anova(md.lm.flap.1,md.lm.flap.3)
anova(md.lm.flap.1,md.lm.flap.4)
# SUBSET
flap.eng.noWB = notWB.Flap[which(notWB.Flap$Language == "english"),]
m
# MODEL & ANALYSIS
md.lm.flap.eng.noWB = lmer(IntensityDifference ~ Consonant * Style * Subgroup + (1|Speaker) + (1|Word), data = flap.eng.noWB, REML=F)
Anova(md.lm.flap.eng.noWB, Type = "II", test.statistic = "Chisq")
#plot
notWB.eng.Flap.plt = summarySE(flap.eng.noWB, measurevar="IntensityDifference", groupvars=c("Consonant", "Style", "Subgroup"))
# BAR
ggplot(notWB.eng.Flap.plt, aes(x = Consonant, y = IntensityDifference, fill = Style)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(aes(ymin = IntensityDifference - se, ymax = IntensityDifference + se),
position = position_dodge(.9), width = .5) +
facet_grid( ~ Subgroup) +
xlab("Consonant") + ylab("Intensity Difference") + labs(fill = "Style") +
ggtitle("Intensity Difference - AZE vs. JE") +
theme(text = element_text(face="bold"))
ggplot(flap.eng.noWB, aes(x = Consonant, y = IntensityDifference, fill = Style)) +
geom_violin() +
facet_grid( ~ Subgroup) +
xlab("Consonant") + ylab("Intensity Difference") + labs(fill = "Style") +
ggtitle("Intensity Difference - AZE vs. JE") +
theme(text = element_text(face="bold"))
## ONLY AZ
flap.AZ.noWB = notWB.Flap[which(notWB.Flap$Group == "arizona"),]
## ONLY AZ
flap.AZ.noWB = notWB.Flap[which(notWB.Flap$Group == "arizona"),]
#summary(flap.AZ.noWB)
# MODEL & ANALYSIS
md.lm.flap.AZ.noWB = lmer(IntensityDifference ~ Consonant * Style + (1|Speaker) + (1|Word), data = flap.AZ.noWB, REML=F)
Anova(md.lm.flap.AZ.noWB, Type = "II", test.statistic = "Chisq")
#plot
notWB.AZ.Flap.plt = summarySE(flap.AZ.noWB, measurevar="IntensityDifference", groupvars=c("Consonant", "Style"))
# BAR
ggplot(notWB.AZ.Flap.plt, aes(x = Consonant, y = IntensityDifference, fill = Style)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(aes(ymin = IntensityDifference - se, ymax = IntensityDifference + se),
position = position_dodge(.9), width = .5) +
xlab("Consonant") + ylab("Intensity Difference") + labs(fill = "Style") +
ggtitle("Intensity Difference - AZE") +
theme(text = element_text(face="bold"))
# VIOLIN
ggplot(flap.AZ.noWB, aes(x = Consonant, y = IntensityDifference, fill = Style)) +
geom_violin() +
xlab("Consonant") + ylab("Intensity Difference") + labs(fill = "Style") +
ggtitle("Intensity Difference - AZE") +
theme(text = element_text(face="bold"))
flap.jpn.noWB = notWB.Flap[which(notWB.Flap$Group == "japanese"),]
md.lm.flap.jpn.noWB = lmer(IntensityDifference ~ Consonant * Style * Subgroup + (1|Speaker) + (1|Word), data = flap.jpn.noWB, REML=F)
# plot
flap.jpn.noWB.plt = summarySE(flap.jpn.noWB, measurevar="IntensityDifference", groupvars=c("Consonant", "Style", "Subgroup"))
# BAR
ggplot(flap.jpn.noWB.plt, aes(x = Consonant, y = IntensityDifference, fill = Style)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(aes(ymin = IntensityDifference - se, ymax = IntensityDifference + se),
position = position_dodge(.9), width = .5) +
facet_grid( ~ Subgroup) +
xlab("Consonant") + ylab("Intensity Difference") + labs(fill = "Style") +
ggtitle("Intensity Difference - JE vs. JJ") +
theme(text = element_text(face="bold"))
# VIOLIN
ggplot(flap.jpn.noWB, aes(x = Consonant, y = IntensityDifference, fill = Style)) +
geom_violin() +
facet_grid( ~ Subgroup) +
xlab("Consonant") + ylab("Intensity Difference") + labs(fill = "Style") +
ggtitle("Intensity Difference - JE vs. JJ") +
theme(text = element_text(face="bold"))
flap.jpn.noWB = notWB.Flap[which(notWB.Flap$Group == "japanese"),]
View(flap.jpn.noWB)
## IntensityDiff ~ WB * Style * Consonant * Group * Freq
flap.eng = data[which((data$Consonant == "t" | data$Consonant == "d") & data$Language == "english" & !is.na(data$CocaLogProp)),]
# summary(flap.eng)
md.flap.eng = lmer(IntensityDifference ~ AtWordBoundary * Style * Consonant * Subgroup * CocaLogProp + (1|Speaker) + (1|Word), data = flap.eng, REML=F)
Anova(md.flap.eng, Type = "II", test.statistic = "Chisq")
flap.eng$WB[flap.eng$AtWordBoundary == "y"] = "WordBoundary"
flap.eng$WB[flap.eng$AtWordBoundary != "y"] = "WithinWord"
## WordBoundary Flap
flap.only.eng.WB = flap.eng[which(flap.eng$AtWordBoundary == "y"),]
md.flap.eng.WB = lmer(IntensityDifference ~ Style * Consonant * Subgroup * CocaLogProp + (1|Speaker) + (1|Word), data = flap.only.eng.WB, REML=F)
Anova(md.flap.eng.WB, Type="II", test.statistic = "Chisq")
## notWordBoundary Flap
flap.only.eng.noWB = flap.eng[which(flap.eng$AtWordBoundary != "y"),]
md.flap.eng.noWB = lmer(IntensityDifference ~ Style * Consonant * Subgroup * CocaLogProp + (1|Speaker) + (1|Word), data = flap.only.eng.noWB, REML=F)
Anova(md.flap.eng.noWB, Type="II", test.statistic = "Chisq")
# plot
flap.eng.plt = summarySE(flap.eng, measurevar="IntensityDifference", groupvars=c("Consonant", "Style", "Subgroup", "WB"))
# BAR
ggplot(flap.eng.plt, aes(x = Consonant, y = IntensityDifference, fill = Style)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(aes(ymin = IntensityDifference - se, ymax = IntensityDifference + se),
position = position_dodge(.9), width = .5) +
facet_grid(WB ~ Subgroup) +
xlab("Consonant") + ylab("Intensity Difference") + labs(fill = "Style") +
ggtitle("Intensity Difference - AZE vs. JE") +
theme(text = element_text(face="bold"))
# VIOLIN
ggplot(flap.eng, aes(x = Consonant, y = IntensityDifference, fill = Style)) +
geom_violin() +  facet_grid(WB ~ Subgroup) +
xlab("Consonant") + ylab("Intensity Difference") + labs(fill = "Style") +
ggtitle("Intensity Difference - AZE vs. JE") +
theme(text = element_text(face="bold"))
ggplot(flap.eng, aes(x = CocaLogProp, y = IntensityDifference, color = Subgroup)) +
stat_summary(fun.y = "mean") +
geom_smooth(method="lm", lwd = 2) +
facet_grid(Consonant ~ WB * Style) +
theme(text = element_text(face="bold"))
wb = c("WithinWord", "WordBoundary")
st = c("wordlist", "conversation")
sb = c("AZ-English", "JPN-English")
for (w in wb){
for (t in st){
for (b in sb){
result = cor.test(flap.eng.t$IntensityDifference[flap.eng.t$WB == w & flap.eng.t$Style == t & flap.eng.t$Subgroup == b], flap.eng.t$CocaLogProp[flap.eng.t$WB == w & flap.eng.t$Style == t & flap.eng.t$Subgroup == b])
if (result$p.value < 0.05){
print(w)
print(t)
print(b)
print(result)
}
}
}
}
flap.eng.d = flap.eng[which(flap.eng$Consonant == "d"),]
for (w in wb){
for (t in st){
for (b in sb){
result = cor.test(flap.eng.d$IntensityDifference[flap.eng.d$WB == w & flap.eng.d$Style == t & flap.eng.d$Subgroup == b], flap.eng.d$CocaLogProp[flap.eng.d$WB == w & flap.eng.d$Style == t & flap.eng.d$Subgroup == b])
if (result$p.value < 0.05){
print(w)
print(t)
print(b)
print(result)
}
}
}
}
View(md.lm.flap.1)
for (w in wb){
for (t in st){
for (b in sb){
result = cor.test(flap.eng.t$IntensityDifference[flap.eng.t$WB == w & flap.eng.t$Style == t & flap.eng.t$Subgroup == b], flap.eng.t$CocaLogProp[flap.eng.t$WB == w & flap.eng.t$Style == t & flap.eng.t$Subgroup == b])
if (result$p.value < 0.05){
print(w)
print(t)
print(b)
print(result)
}
}
}
}
for (w in wb){
for (t in st){
for (b in sb){
result = cor.test(flap.eng.t$IntensityDifference[flap.eng.t$WB == w & flap.eng.t$Style == t & flap.eng.t$Subgroup == b], flap.eng.t$CocaLogProp[flap.eng.t$WB == w & flap.eng.t$Style == t & flap.eng.t$Subgroup == b])
if (result$p.value < 0.05){
print(w)
print(t)
print(b)
print(result)
}
}
}
}
flap.eng.d = flap.eng[which(flap.eng$Consonant == "t"),]
for (w in wb){
for (t in st){
for (b in sb){
result = cor.test(flap.eng.t$IntensityDifference[flap.eng.t$WB == w & flap.eng.t$Style == t & flap.eng.t$Subgroup == b], flap.eng.t$CocaLogProp[flap.eng.t$WB == w & flap.eng.t$Style == t & flap.eng.t$Subgroup == b])
if (result$p.value < 0.05){
print(w)
print(t)
print(b)
print(result)
}
}
}
}
flap.eng.d = flap.eng[which(flap.eng$Consonant == "t"),]
for (w in wb){
for (t in st){
for (b in sb){
result = cor.test(flap.eng.t$IntensityDifference[flap.eng.t$WB == w & flap.eng.t$Style == t & flap.eng.t$Subgroup == b], flap.eng.t$CocaLogProp[flap.eng.t$WB == w & flap.eng.t$Style == t & flap.eng.t$Subgroup == b])
if (result$p.value < 0.05){
print(w)
print(t)
print(b)
print(result)
}
}
}
}
flap.eng.t = flap.eng[which(flap.eng$Consonant == "t"),]
for (w in wb){
for (t in st){
for (b in sb){
result = cor.test(flap.eng.t$IntensityDifference[flap.eng.t$WB == w & flap.eng.t$Style == t & flap.eng.t$Subgroup == b], flap.eng.t$CocaLogProp[flap.eng.t$WB == w & flap.eng.t$Style == t & flap.eng.t$Subgroup == b])
if (result$p.value < 0.05){
print(w)
print(t)
print(b)
print(result)
}
}
}
}
flap.eng.d = flap.eng[which(flap.eng$Consonant == "d"),]
for (w in wb){
for (t in st){
for (b in sb){
result = cor.test(flap.eng.d$IntensityDifference[flap.eng.d$WB == w & flap.eng.d$Style == t & flap.eng.d$Subgroup == b], flap.eng.d$CocaLogProp[flap.eng.d$WB == w & flap.eng.d$Style == t & flap.eng.d$Subgroup == b])
if (result$p.value < 0.05){
print(w)
print(t)
print(b)
print(result)
}
}
}
}
ggplot(flap.eng.d, aes(x = CocaLogProp, y = IntensityDifference, color = Subgroup)) +
stat_summary(fun.y = "mean") +
geom_smooth(method="lm", lwd = 2) +
facet_grid(Consonant ~ WB * Style) +
theme(text = element_text(face="bold"))
ggplot(flap.eng.t, aes(x = CocaLogProp, y = IntensityDifference, color = Subgroup)) +
stat_summary(fun.y = "mean") +
geom_smooth(method="lm", lwd = 2) +
facet_grid(Consonant ~ WB * Style) +
theme(text = element_text(face="bold"))
setwd("~/github")
setwd("~/github/asist-speech/classifier_R/extra")
############ Read files ####################
setwd("~/github/asist-speech/classifier_R/extra")
speaker = read.csv("speaker2idx.csv",header=TRUE, stringsAsFactors = FALSE) #file with speaker details
speaker = read.csv("speaker2idx.csv",header=TRUE, stringsAsFactors = FALSE) #file with speaker details
names(speaker) <- c("speaker", "Speaker", "gender") #rename columns
## dev ##
mfcc = read.csv("dev_mfcc.csv",header=TRUE, stringsAsFactors = FALSE) #file with mfcc values
######################### Classifier #########################################
setwd("~/github/asist-speech/classifier_R/extra")
classifier_values_all = read.csv("classifier_values_consolidated.csv",header=TRUE, stringsAsFactors = FALSE)
######################### Classifier #########################################
setwd("~/github/asist-speech/classifier_R")
classifier_values_all = read.csv("classifier_values_consolidated.csv",header=TRUE, stringsAsFactors = FALSE)
#mean F0s for each gender: 1=female, 2=male
f0_m = mean(subset(classifier_values_all$f0, classifier_values_all$gender == 2))
f0_f = mean(subset(classifier_values_all$f0, classifier_values_all$gender == 1))
#group data by known and unknown gender
gender_unknown = subset(classifier_values_all, (classifier_values_all$gender == 0 | is.na(classifier_values_all$gender)> 0))
gender_known = subset(classifier_values_all, (classifier_values_all$gender == 1 | classifier_values_all$gender == 2))
View(gender_unknown)
View(gender_known)
gender_known <- cbind(gender_known, gender_predicted = NA)
View(gender_known)
# classifier
for (row in 1:nrow(gender_known)) {
f0_val <- gender_unknown[row, "f0"]
diff1 = f0_val-f0_m
diff2 = f0_val-f0_f
if(diff1 <= 0 ) {
gender_unknown[row, "gender_predicted"] <- 2
}
else if(diff2 >= 0){
gender_unknown[row, "gender_predicted"] <- 1
}
else if(abs(diff2) > abs(diff1)){gender_unknown[row, "gender_predicted"] <- 2}
else if(abs(diff1) >= abs(diff2)){gender_unknown[row, "gender_predicted"] <- 1}
}
# classifier
for (row in 1:nrow(gender_known)) {
f0_val <- gender_unknown[row, "f0"]
diff1 = f0_val-f0_m
diff2 = f0_val-f0_f
if(diff1 <= 0 ) {
gender_unknown[row, "gender_predicted"] <- 2
}
else if(diff2 >= 0){
gender_unknown[row, "gender_predicted"] <- 1
}
else if(abs(diff2) > abs(diff1)){gender_known[row, "gender_predicted"] <- 2}
else if(abs(diff1) >= abs(diff2)){gender_known[row, "gender_predicted"] <- 1}
}
#mean F0s for each gender: 1=female, 2=male
f0_m = mean(subset(classifier_values_all$f0, classifier_values_all$gender == 2))
f0_f = mean(subset(classifier_values_all$f0, classifier_values_all$gender == 1))
gender_known = subset(classifier_values_all, (classifier_values_all$gender == 1 | classifier_values_all$gender == 2))
gender_known <- cbind(gender_known, gender_predicted = NA)
# classifier
for (row in 1:nrow(gender_known)) {
f0_val <- gender_known[row, "f0"]
diff1 = f0_val-f0_m
diff2 = f0_val-f0_f
if(diff1 <= 0 ) {
gender_known[row, "gender_predicted"] <- 2
}
else if(diff2 >= 0){
gender_known[row, "gender_predicted"] <- 1
}
else if(abs(diff2) > abs(diff1)){gender_known[row, "gender_predicted"] <- 2}
else if(abs(diff1) >= abs(diff2)){gender_known[row, "gender_predicted"] <- 1}
}
View(gender_known)
nrow(subset(gender_known, gender_known$gender == gender_known$gender_predicted))
nrow(gender_known)
100 *(nrow(subset(gender_known, gender_known$gender == gender_known$gender_predicted))
nrow(gender_known)/nrow(gender_known))
100 * ((nrow(subset(gender_known, gender_known$gender == gender_known$gender_predicted)))
nrow(subset(gender_known, gender_known$gender == gender_known$gender_predicted))
nrow(subset(gender_known, gender_known$gender == gender_known$gender_predicted))
(nrow(gender_known))
nrow(subset(gender_known, gender_known$gender == gender_known$gender_predicted))/(nrow(gender_known))
100* nrow(subset(gender_known, gender_known$gender == gender_known$gender_predicted))/(nrow(gender_known))
x <- subset(gender_known, gender_known$gender == gender_known$gender_predicted)
View(x)
y <- subset(gender_known, gender_known$gender =! gender_known$gender_predicted)
y <- subset(gender_known, gender_known$gender != gender_known$gender_predicted)
View(y)
sd(mean(subset(classifier_values_all$f0, classifier_values_all$gender == 2)))
sd(subset(classifier_values_all$f0, classifier_values_all$gender == 2))
sd((subset(classifier_values_all$f0, classifier_values_all$gender == 1)))
subset(classifier_values_all, (classifier_values_all$gender == 1, classifier_values_all$f0 < 100)
subset(classifier_values_all, (classifier_values_all$gender == 1 & classifier_values_all$f0 < 100)
s
subset(classifier_values_all, (classifier_values_all$gender == 1 && classifier_values_all$f0 < 100)
)
nrow(subset(classifier_values_all, (classifier_values_all$gender == 1 && classifier_values_all$f0 < 100))
)
nrow(subset(classifier_values_all, (classifier_values_all$gender == 1 & classifier_values_all$f0 < 100)))
b <- nrow(subset(classifier_values_all, (classifier_values_all$gender == 1 & classifier_values_all$f0 < 100)))
b <- subset(classifier_values_all, (classifier_values_all$gender == 1 & classifier_values_all$f0 < 100))
View(b)
nrow(subset(classifier_values_all, (classifier_values_all$gender == 1 & classifier_values_all$f0 < 100)))
nrow(subset(classifier_values_all, (classifier_values_all$gender == 1 & classifier_values_all$f0 < 100)))/ nrow(classifier_values_all)
nrow(subset(classifier_values_all, (classifier_values_all$gender == 2 & classifier_values_all$f0 > 200)))/ nrow(classifier_values_all)
a = subset(classifier_values_all, (classifier_values_all$gender == 2 & classifier_values_all$f0 > 200))
View(a)
